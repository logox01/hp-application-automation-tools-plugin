<!--
  ~ © Copyright 2013 EntIT Software LLC
  ~  Certain versions of software and/or documents (“Material”) accessible here may contain branding from
  ~  Hewlett-Packard Company (now HP Inc.) and Hewlett Packard Enterprise Company.  As of September 1, 2017,
  ~  the Material is now offered by Micro Focus, a separately owned and operated company.  Any reference to the HP
  ~  and Hewlett Packard Enterprise/HPE marks is historical in nature, and the HP and Hewlett Packard Enterprise/HPE
  ~  marks are the property of their respective owners.
  ~ __________________________________________________________________
  ~ MIT License
  ~
  ~ Copyright (c) 2018 Micro Focus Company, L.P.
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all
  ~ copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  ~ THE SOFTWARE.
  ~ ___________________________________________________________________
  ~
  -->
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
<body>
	<script>

		window.addEventListener("load", srfInit, false);

		function srfInit() {

         // Execute Descriptor methods
         var srfDescriptor = <st:bind value="${instance}"/>
         srfDescriptor.hasSrfServers(function(hasSrfServerResponse) {
               console.log("Successful execution:" + hasSrfServerResponse);
               if(hasSrfServerResponse.responseJSON){
                   addSrfServerHandler();
               } else {
                   addButtonEventWrapper = document.getElementById("addButtonEventWrapper");
                   addButtonEventWrapper.addEventListener("click", addSrfServerHandler);
               }
         })
		}

		function addSrfServerHandler(){
		    // Remove initial Add button event listener - fixing the issue of when add button is clicked the whole form triggers this function
            addButtonEventWrapper = document.getElementById("addButtonEventWrapper");
            addButtonEventWrapper.removeEventListener("click", addSrfServerHandler);

            var buttons = getButtons();
            window.addButton = getButtonByInnerText(buttons, "add");
            // Put back click event ONLY on add button
            addButton.addEventListener("click", addSrfServerHandler);
            addButton.disabled=true;

            window.delBtn = getButtonByInnerText(buttons, "delete");
            delBtn.addEventListener("click", deleteSrfServerHandler);
		}

		function deleteSrfServerHandler(){
            addButton.disabled=false;
        }

        function getButtons() {
            var anchor = document.getElementById('SRF_123');
            var p = anchor.parentNode;
            return p.getElementsByTagName("button");
        }

        function getButtonByInnerText(collection, innerText) {
        	var button;
        	Array.from(collection).forEach(function(item) {
               var name = item.innerText.toLowerCase()
               if(name.indexOf(innerText) !== -1)
               	    button = item;
             });

            return button;
        }

	</script>
	<!--
      This Jelly script is used to produce the global configuration option.

      Jenkins uses a set of tag libraries to provide uniformity in forms.
      To determine where this tag is defined, first check the namespace URI,
      and then look under $JENKINS/views/. For example, <f:section> is defined
      in $JENKINS/views/lib/form/section.jelly.

      It's also often useful to just check other similar scripts to see what
      tags they use. Views are always organized according to its owner class,
      so it should be straightforward to find them.
    -->

	<f:section title="SRF Common Settings" name="SrfCommon">
		<f:entry  title="SRF Server"  description="">

			<p hidden="true"  id="SRF_123">empty</p>

			<span id="addButtonEventWrapper">
			<f:repeatable name="SRF_123" var="inst" items="${descriptor.installations}" add="Add SRF Server" >

				<table width="100%">
					<f:entry title="${%SRF Tunnel Client Path}" field="srfTunnelPath" description="SRF's tunnel client executable path (i.e. /var/tunnelClient/ftaas)" >
						<f:textbox value="${inst.srfTunnelPath}" />
					</f:entry>

					<f:entry title="${%SRF Server}" field="srfServerName" description="SRF's server address (i.e. https://srf-server.com)" >
						<f:textbox value="${inst.srfServerName}" />
					</f:entry>

					<f:entry title="${%SRF Proxy}" field="srfProxyName" description="Proxy address (i.e. http://proxy-host:proxy-port)" >
						<f:textbox value="${inst.srfProxyName}" />
					</f:entry>

					<f:entry title="${%Client ID}" field="srfAppName" description="SRF's client name for authentication">
						<f:textbox value="${inst.srfAppName}" />
					</f:entry>

					<f:entry title="${%Client Secret}" field="srfSecretName" description="SRF's client secret for authentication" >
						<f:password value="${inst.srfSecretName}" />
					</f:entry>

					<f:entry title="">
                       <f:validateButton title="${%Test Connection}" progress="${%Testing...}" method="testConnection" with="srfServerName,srfAppName,srfSecretName,srfProxyName" />
                    </f:entry>
					<f:entry title="">
						<div align="right">
                            <f:repeatableDeleteButton value="Delete SRF Server" />
                        </div>
					</f:entry>
				</table>

			</f:repeatable>
			</span>
		</f:entry>
	</f:section>
</body>
</j:jelly>



